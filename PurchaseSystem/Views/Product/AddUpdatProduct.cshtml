@model PurchaseSystem.DTO.ProductMstDTO

@{
    ViewBag.Title = "AddUpdatProduct";
}

<h2>AddUpdatProduct</h2>

@using (Html.BeginForm("AddUpdatProduct", "Product"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductMst</h4>


        <div class="form-group">
            @Html.LabelFor(model => model.productMst.fk_prodtypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.productMst.fk_prodtypeId,
               new SelectList(Model.ProductTypeMstList, "pk_prodtypeId", "Description", 0), "Select Product Type",
              new { @class = "form-control" }
               )
                @Html.ValidationMessageFor(model => model.productMst.fk_prodtypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productMst.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productMst.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productMst.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productMst.OriPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productMst.OriPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productMst.OriPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productMst.SellingUptoPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productMst.SellingUptoPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productMst.SellingUptoPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productMst.ProductQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productMst.ProductQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productMst.ProductQuantity, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(Model => Model.productMst.pk_ProductId)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
